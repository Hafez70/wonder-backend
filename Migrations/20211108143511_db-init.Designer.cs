// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WTLicVerify.DBContexts;

namespace WTLicVerify.Migrations
{
    [DbContext(typeof(WTDBContext))]
    [Migration("20211108143511_db-init")]
    partial class dbinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("WTLicVerify.Models.AuthorSale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("EnvatoAccessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("amount")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("license")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("purchase_count")
                        .HasColumnType("int");

                    b.Property<string>("sold_at")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("support_amount")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("supported_until")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_AuthorSale");

                    b.HasIndex("EnvatoAccessId");

                    b.HasIndex("ItemId");

                    b.ToTable("AuthorSale");
                });

            modelBuilder.Entity("WTLicVerify.Models.EnvatoAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("access_token")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("activate")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("activated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("activationCode")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("application_name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("application_version")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("connected_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("expires_in")
                        .HasColumnType("int");

                    b.Property<string>("extenstion_name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("extenstion_version")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("machineId")
                        .HasColumnType("longtext");

                    b.Property<string>("machine_name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("refresh_token")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("token_type")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_EnvatoAccess");

                    b.ToTable("EnvatoAccess");
                });

            modelBuilder.Entity("WTLicVerify.Models.SaleItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("author_url")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("author_username")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("number_of_sales")
                        .HasColumnType("int");

                    b.Property<string>("site")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("updated_at")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id")
                        .HasName("PK_SaleItem");

                    b.ToTable("SaleItem");
                });

            modelBuilder.Entity("WTLicVerify.Models.AuthorSale", b =>
                {
                    b.HasOne("WTLicVerify.Models.EnvatoAccess", "EnvatoAccess")
                        .WithMany()
                        .HasForeignKey("EnvatoAccessId");

                    b.HasOne("WTLicVerify.Models.SaleItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.Navigation("EnvatoAccess");

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
